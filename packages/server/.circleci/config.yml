version: 2.1

jobs:
  server-test:
    docker:
      - image: cypress/base:17.8.0
        environment:
          TERM: xterm # this enables colors in the output
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

      - image: cimg/postgres:14.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: chain123
          POSTGRES_DB: cookknowdb_test

      - image: cimg/redis:6.2.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    steps:
      - checkout
      - run:
          name: Install dependencies
          # working_directory: packages/server
          command: yarn install

      - run:
          name: Check-types
          working_directory: packages/server
          command: yarn check-types

      - run:
          name: compile typescript (for starting a server and also for jest since it needs orm config)
          working_directory: packages/server
          command: |
            yarn global add typescript
            tsc

      - run:
          name: run jest
          working_directory: packages/server
          command: yarn test

      - run:
          name: start a backend for cypress
          working_directory: packages/server
          command: yarn start:ci
          background: true

      - run:
          name: start NEXT js client
          working_directory: packages/client
          command: |
            yarn start:ci
          background: true

      - run:
          name: run cypress
          working_directory: packages/server
          command: yarn cypress:run

      - store_artifacts:
          path: /root/project/packages/server/src/cypress/videos

      - store_artifacts:
          path: ~/project/packages/server/src/cypress/screenshots

  server-deploy-prod:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: cimg/postgres:14.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: chain123
          POSTGRES_DB: cookknowdb_test
      - image: cimg/redis:6.2.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock"}}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          # working_directory: packages/server
          command: yarn install

      - run:
          name: update ubuntu
          command: sudo apt update
      - run:
          name: Install SSH so I can run ssh-keyscan to add droplet to known hosts
          command: sudo apt install openssh-server
      - run:
          name: Add dokku as know host so not prompted for trust (this one  for some reasons take some time)
          command: ssh-keyscan 128.199.205.119 >> ~/.ssh/known_hosts

      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock"}}
          paths:
            - ./node_modules

      #prepare to deploy
      - run: git config --global user.email $GITHUB_EMAIL
      - run: git config --global user.name $GITHUB_USER

      # run on root
      # increase from version in apckage.json
      # - run:
      #     name: Create a new version with lerna
      #     command: yarn new-version

      # premium feature
      #default version is 17.09.0-ce which gives ERROR EPERM: operation not permitted
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      # priting all tags for debugging purpose
      - run: git tag

      # the the second to last tag (use to compare with the current one)
      # - run: echo 'export VERSION=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=2) | sed -n 2p`' >> $BASH_ENV

      - run:
          name: Get the latest tag and put in $VERSION
          command: echo 'export VERSION=`git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1)`' >> $BASH_ENV

      - run: echo $VERSION

      # run from root
      - run:
          name: Build docker image and push to docker hub
          # working_directory: packages/server
          command: yarn ci:docker

      # circleci_digital_ocean_cookknow private ssh key
      - add_ssh_keys:
          fingerprints:
            - "8f:6b:c1:a9:7c:d6:e6:cc:e7:c7:61:07:f9:30:35:93"

      # run from root
      - run:
          name: ssh into dokku, pull from hub, tag, and deploy
          command: ssh shane@128.199.205.119 " docker pull kittishane/cookknow:$VERSION && docker tag kittishane/cookknow:$VERSION dokku/server:$VERSION && echo $DOKKU_PASSWORD | sudo -S dokku tags:deploy server $VERSION"

      # - run:
      #     name: Login and push in Dokku
      #     command: yarn ci:dokku
  # server-deploy:

# like docker build
# - run:
# name: "Install Docker client"
# command: |
# # do  docker thingy here
# - run: yarn build

#  "docker:build": "docker build -t benawad/example:latest .",
#     "docker:login": "docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD",
#     "docker:push": "docker push benawad/example:latest",
#     "ci:docker": "npm run docker:build && npm run docker:login && npm run docker:push"

workflows:
  version: 2
  server-workflow:
    jobs:
      - server-test:
          name: ðŸ§ª  Run jest and cypress

      - server-deploy-prod:
          name: ðŸš€ Deploy to production!
          requires:
            - ðŸ§ª  Run jest and cypress
          filters:
            branches:
              only: master
