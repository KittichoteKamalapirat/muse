version: 2.1
# orbs:
# node: circleci/node@4.7
orbs:
  slack: circleci/slack@4.10.1

# define the job to be used in the owrkflow
jobs:
  client-test:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

      - image: cimg/postgres:14.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: chain123
          POSTGRES_DB: cookknowdb_dev

      - image: cimg/redis:6.2.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          # working_directory: packages/client
          command: yarn install

      - run:
          name: Check-types
          working_directory: packages/client
          command: yarn check-types

      - run:
          name: run jest
          working_directory: packages/client
          command: yarn test

      - slack/notify:
          event: fail
          template: basic_fail_1

  client-deploy-test:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock"}}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: yarn install

      - run:
          name: Build Next.JS App
          working_directory: packages/client
          command: yarn build
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ./.next/cache

      - run:
          name: "deploy a test-master branch to test.cookknow.com"
          working_directory: packages/client
          command: |
            curl -X POST $VERCEL_DEPLOY_HOOK_TEST
          filters:
            branches:
              only: test-master

      - slack/notify:
          event: fail
          template: basic_fail_1

  client-deploy-prod:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    # - node/test:
    # version: "16.10"
    # pkg-manager: yarn
    working_directory: ~/repo
    steps:
      # checkout is alias for git clone
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock"}}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          # working_directory: packages/client
          command: yarn install

      - run:
          name: Build Next.JS App
          working_directory: packages/client
          command: yarn build
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ./.next/cache

      - run:
          name: "deploy a master branch to cookknow.com"
          working_directory: packages/client
          command: |
            curl -X POST $VERCEL_DEPLOY_HOOK_PROD
          filters:
            branches:
              only: master

      - slack/notify:
          event: fail
          template: basic_fail_1

# workflow will run the job. I can define the jobs first then run by jobs name
workflows:
  client-workflow:
    jobs:
      - client-test:
          name: üî¨ Run jest
          context:
            - slack-secrets

      - client-deploy-test:
          name: üåç Deploy to test
          requires:
            - üî¨ Run jest
          filters:
            branches:
              only: test-master
          context:
            - slack-secrets

      - client-deploy-prod:
          name: üåç Deploy to production!
          requires:
            - üî¨ Run jest
          filters:
            branches:
              only: master
          context:
            - slack-secrets
#test
