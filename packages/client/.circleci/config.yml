version: 2.1
# orbs:
# node: circleci/node@4.7

# define the job to be used in the owrkflow
jobs:
  client-test:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: cimg/postgres:14.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: chain123
          POSTGRES_DB: cookknowdb_dev

      - image: cimg/redis:6.2.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          # working_directory: packages/client
          command: yarn install

      - run:
          name: Check-types
          working_directory: packages/client
          command: yarn check-types

      - run:
          name: compile typescript (server)
          working_directory: packages/server
          command: |
            yarn global add typescript
            tsc

      - run:
          name: start a server for cypress
          working_directory: packages/server
          command: yarn start:ci

      - run:
          name: run client
          working_directory: packages/client
          command: yarn start:ci

      - run:
          name: run cypress
          working_directory: packages/client
          command: yarn cypress:run

  client-deploy-prod:
    docker:
      - image: cimg/node:17.6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    # - node/test:
    # version: "16.10"
    # pkg-manager: yarn
    working_directory: ~/repo
    steps:
      # checkout is alias for git clone
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock"}}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          # working_directory: packages/client
          command: yarn install

      # - run:
      #     name: "run unit test"
      #     working_directory: packages/client
      #     command: |
      #       yarn test

      # name: "run integration test"
      # command: |
      # yarn cypress run --project ./spec

      # save test results
      # - store_artifacts:
      # path: vulcan/spec/cypress/videos
      # - store_artifacts:
      # path: vulcan/spec/cypress/screenshots
      # - run:
      - run:
          name: Build Next.JS App
          working_directory: packages/client
          command: yarn build
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ./.next/cache

      # deploy test-master branch, VVERCEL_DEPLOY_HOOK_TEST is where the test.cookknow.com is
      - run:
          name: "deploy a test-master branch to test.cookknow.com"
          working_directory: packages/client
          command: |
            curl -X POST $VERCEL_DEPLOY_HOOK_TEST
          filters:
            branches:
              only: test-master

# workflow will run the job. I can define the jobs first then run by jobs name
workflows:
  client-workflow:
    jobs:
      - client-test:
          name: üî¨ Run jest and cypress
      - client-deploy-prod:
          name: üåç Deploy to production!
          requires:
            - üî¨ Run jest and cypress
          filters:
            branches:
              only: master
#test
